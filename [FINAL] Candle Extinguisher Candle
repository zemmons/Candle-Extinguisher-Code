#include <Servo.h>  // include the Servo library
#include <DHT.h>    // include the DHT library
#include <Wire.h>   // include the Wire library for I2C communication
#include <U8x8lib.h>  // include the U8x8 library for OLED screens

Servo servo1;  // create Servo object for the first servo
Servo servo2;  // create Servo object for the second servo
int servoPin1 = 9;  // define the pin that the first servo is connected to
int servoPin2 = 10; // define the pin that the second servo is connected to
int servoAngle1 = 0;  // define a variable to store the first servo's angle
int servoAngle2 = 0;  // define a variable to store the second servo's angle
int buttonPin = 8; // define the pin connected to the button
int LEDPin = 11; //define the pin connected to the LED

#define DHTTYPE DHT11   // define the type of DHT sensor being used
#define DHTPIN 2        // define the pin that the DHT sensor is connected to
DHT dht(DHTPIN, DHTTYPE);  // create a DHT object

U8X8_SSD1306_128X64_NONAME_SW_I2C u8x8(/* clock=/ SCL, / data=/ SDA, / reset=*/ U8X8_PIN_NONE); Â  // OLEDs without Reset of the Display

//define timer variables
unsigned long previousMillis = 0;  // store the previous time
unsigned long currentMillis = 0;
const unsigned long TIMER_INTERVAL = 14400000; //define timer interval 4 hours in millis

void setup()
{
  servo1.attach(servoPin1);  // attach the first servo to the defined pin
  servo2.attach(servoPin2);  // attach the second servo to the defined pin
  dht.begin();  // initialize the DHT sensor

  u8x8.begin();  // initialize the OLED display
  u8x8.setFont(u8x8_font_chroma48medium8_r);
  u8x8.clear();  // clear the display
  u8x8.print("Temperature: ");  // print a label for the temperature reading
}

void loop() {
  if (digitalRead(buttonPin) == LOW) {
    digitalWrite(LEDPin, LOW); // turn off LED
    while(1); // stop the loop
  }
else
{
    digitalWrite(LEDPin,HIGH);
}
  float temperature = dht.readTemperature();  // read the temperature from the DHT sensor
  if (isnan(temperature)) { // check if the temperature read is valid
    Serial.println("Failed to read temperature from DHT sensor");
  }
  if (temperature > 120)
  {
    currentMillis = millis();
    if (currentMillis - previousMillis > TIMER_INTERVAL)
    {
      servo1.write(servoAngle1 + 90);  // set the first servo's angle to its current angle plus 90 degrees
      servo2.write(servoAngle2 + 90);  // set the second servo's angle to its current angle plus 90 degrees
      servoAngle1 += 90;  // update the first servo's angle variable
      servoAngle2 +=90; // update the second servo's angle variable
previousMillis = currentMillis;
}
}
else // temperature is less than or equal to 120 degrees Fahrenheit
{
// do nothing
}
display.setCursor(0, 1);
display.print(temperature); //print temperature on the OLED display
}
